name: Main

on:
  push:
    branches:
      - main

jobs:
  
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
   
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          
  build-push:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

      - name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest

  deploy:
    needs: build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.production.yml"
          target: "./kittygram"
      
      - name: Deploy application
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "Переходим в папку проекта"
            cd ./kittygram

            echo "Запускаем файл docker-compose"
            docker compose -f docker-compose.production.yml pull

            echo "Перезапускаем контенеры"
            docker compose -f docker-compose.production.yml down
            docker compose -f docker-compose.production.yml up -d
            
            echo "Выполняет миграции и сбор статики"
            docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /app/static/back/static/
            docker image prune -f

  server_tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt --prefer-binary
          
      - name: Run autotests
        run: |
          pytest
